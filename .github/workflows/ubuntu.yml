name: üêß ‚Ä¢ CI

on:
  push:
    branches: ["master"]
    paths:
      - "**/*.py"
      - '**/*.h'
      - '**/*.cc'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/ubuntu.yml'
  pull_request:
    branches: ["master"]
    paths:
      - "**/*.py"
      - '**/*.h'
      - '**/*.cc'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/ubuntu.yml'
  merge_group:

defaults:
  run:
    shell: bash

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ ubuntu-22.04, ubuntu-24.04, ubuntu-24.04-arm ]
        compiler: [ g++-11, g++-12, g++-13, clang++-14, clang++-15, clang++-16 ]
        exclude:
          - os: ubuntu-22.04
            compiler: g++-13
          - os: ubuntu-22.04
            compiler: clang++-16
          - os: ubuntu-24.04
            compiler: clang++-14
          - os: ubuntu-24.04-arm
            compiler: g++-11
          - os: ubuntu-24.04-arm
            compiler: g++-12
          - os: ubuntu-24.04-arm
            compiler: g++-13
          - os: ubuntu-24.04-arm
            compiler: clang++-14
        include:
          - os: ubuntu-22.04
            compiler: g++-10
          - os: ubuntu-24.04
            compiler: g++-14
          - os: ubuntu-24.04
            compiler: clang++-17
          - os: ubuntu-24.04
            compiler: clang++-18
          - os: ubuntu-24.04-arm
            compiler: clang++-17
          - os: ubuntu-24.04-arm
            compiler: clang++-18

    name: üêß ${{matrix.os}} with ${{matrix.compiler}}
    runs-on: ${{matrix.os}}

    steps:
      - name: Install libraries, compiler, and Qt6
        run: |
          sudo apt-get update
          sudo apt-get install -yq \
            cmake \
            pkg-config \
            python3-dev \
            python3-pip \
            python3-tk \
            python3-venv \
            make \
            gcc \
            g++ \
            libgl1-mesa-dev \
            libboost-dev \
            libboost-filesystem-dev \
            libboost-system-dev \
            libboost-thread-dev \
            libboost-random-dev \
            libtbb-dev \
            ${{matrix.compiler}}
          if [ "${{matrix.os}}" = "ubuntu-22.04" ]; then
            sudo apt-get install -yq \
              qt6-base-dev qt6-tools-dev libqt6charts6-dev libqt6uitools6 libqt6svg6-dev libxkbcommon-dev
          elif [ "${{matrix.os}}" = "ubuntu-24.04" ] || [ "${{matrix.os}}" = "ubuntu-24.04-arm" ]; then
            sudo apt-get install -yq \
              qt6-base-dev qt6-tools-dev qt6-svg-dev qt6-charts-dev libqt6charts6 libqt6uitools6 libqt6svg6
          fi

      # - name: Verify Qt5UiTools Installation
      #   run: |
      #     dpkg -l | grep qttools5-dev || echo "qttools5-dev not installed"
      #     ls /usr/lib/$(uname -m)-linux-gnu/cmake/Qt5UiTools/Qt5UiToolsConfig.cmake || echo "Qt5UiToolsConfig.cmake not found"

      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup ccache
        if: matrix.os != 'ubuntu-24.04-arm'
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "${{matrix.os}}-${{matrix.compiler}}-Release"
          variant: ccache
          save: true
          max-size: 10G

      - name: Create Build Environment (Debug)
        run: cmake -E make_directory ${{github.workspace}}/build_debug

      - name: Configure CMake (Debug)
        working-directory: ${{github.workspace}}/build_debug
        run: |
          cmake ${{github.workspace}} \
            -DCMAKE_CXX_COMPILER=${{matrix.compiler}} \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_VERBOSE_MAKEFILE=ON

      - name: Build and test (Debug)
        working-directory: ${{github.workspace}}/build_debug
        run: cmake --build . --config Debug -j4

      - name: Create Build Environment (Release)
        run: cmake -E make_directory ${{github.workspace}}/build_release

      - name: Configure CMake (Release)
        working-directory: ${{github.workspace}}/build_release
        run: |
          cmake ${{github.workspace}} \
            -DCMAKE_CXX_COMPILER=${{matrix.compiler}} \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_VERBOSE_MAKEFILE=ON

      - name: Build and test (Release)
        working-directory: ${{github.workspace}}/build_release
        run: cmake --build . --config Release -j4
