name: 🍎 • CI

on:
  push:
    paths:
      - "**/*.py"
      - '**/*.h'
      - '**/*.cc'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/macos.yml'
  pull_request:
    paths:
      - "**/*.py"
      - '**/*.h'
      - '**/*.cc'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - 'libs/**'
      - '.github/workflows/macos.yml'
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ macos-13, macos-14, macos-15 ]
        compiler: [ g++-13, g++-14, clang++ ]
        include:
          - compiler: clang++
            ccompiler: clang
          - compiler: g++-13
            ccompiler: gcc-13
          - compiler: g++-14
            ccompiler: gcc-14
        exclude:
          - os: macos-14
            compiler: g++-13
          - os: macos-14
            compiler: g++-14
          - os: macos-15
            compiler: g++-13
          - os: macos-15
            compiler: g++-14

    name: 🍎 ${{matrix.os}} with ${{matrix.compiler}}
    runs-on: ${{matrix.os}}

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.x'

      # Remove existing 2to3 binary
      - name: Remove existing 2to3 binary
        run: sudo rm /usr/local/bin/2to3 || true

      # Install Homebrew dependencies (Boost and Qt5)
      - name: Install Homebrew Dependencies
        run: |
          brew update
          brew install boost qt@5
          # Ensure Qt5 is available in PATH
          echo "/opt/homebrew/opt/qt@5/bin" >> $GITHUB_PATH

      - if: matrix.os == 'macos-13'
        name: Setup XCode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "^14.2"

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "${{matrix.os}}-${{matrix.compiler}}-Release"
          variant: ccache
          save: true
          max-size: 10G

      - name: Create Build Environment (Debug)
        run: cmake -E make_directory ${{github.workspace}}/build_debug

      - name: Configure CMake (Debug)
        working-directory: ${{github.workspace}}/build_debug
        run: >
          cmake ${{github.workspace}}
          -DCMAKE_CXX_COMPILER=${{matrix.compiler}}
          -DCMAKE_BUILD_TYPE=Debug

      - name: Build (Debug)
        working-directory: ${{github.workspace}}/build_debug
        run: cmake --build . --config Release -j4 # all macOS runners provide at least 3 cores

      - name: Test (Debug)
        working-directory: ${{github.workspace}}/build_debug
        run: ctest -C Debug --verbose --output-on-failure --repeat until-pass:3 --parallel 4

      - name: Create Build Environment (Release)
        run: cmake -E make_directory ${{github.workspace}}/build_release

      - name: Configure CMake (Release)
        working-directory: ${{github.workspace}}/build_release
        run: >
          cmake ${{github.workspace}}
          -DCMAKE_CXX_COMPILER=${{matrix.compiler}}
          -DCMAKE_BUILD_TYPE=Release

      - name: Build (Release)
        working-directory: ${{github.workspace}}/build_release
        run: cmake --build . --config Release -j4 # all macOS runners provide at least 3 cores

      - name: Test (Release)
        working-directory: ${{github.workspace}}/build_release
        run: ctest -C Release --verbose --output-on-failure --repeat until-pass:3 --parallel 4
